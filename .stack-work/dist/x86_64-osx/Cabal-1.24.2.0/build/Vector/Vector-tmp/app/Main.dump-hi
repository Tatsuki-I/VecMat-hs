
==================== FINAL INTERFACE ====================
2017-05-14 22:52:24.942466 UTC

interface main@main:Main 8002
  interface hash: c591671638cd9ab0c802c7043af3029e
  ABI hash: 90868f3eabadda65ac7591581c52051d
  export-list hash: 8fb92458c1d7324d73325f1a92f8b821
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f8bab428957d8faa6969f35ed2171648
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Float 33e2b9ffe427edd6a5c2fd6a3b26703c
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
a33d2cfc8a8384160bc5488964e142a3
  $wgo ::
    [GHC.Types.Double] -> [GHC.Types.Double] -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
21c1537bde0be9a2e2baa4083fd5473d
  $wgo1 ::
    [GHC.Types.Double] -> [GHC.Types.Double] -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
2ce0512cac12215afbee7539502a2d77
  type Vec a = GHC.Base.Maybe [a]
a0e1784e7e2323a0e5e24c5651a17f27
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
8f506f5d50ab1c28eace3c287eabf05d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main22
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main20
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main18
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main11
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv6 } } } }) -}
d13424901e4a1200c35fc1c170417ad7
  main10 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0##) -}
83eb36f2a925da1ba82c3d730186994a
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe1
                   Main.main12) -}
1ca544e72fcd6220b0f8527d83ed9eec
  main12 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        Main.main17
                        Main.main13 of wild {
                   []
                   -> GHC.CString.unpackAppendCString#
                        "[]"#
                        (GHC.Types.[] @ GHC.Types.Char)
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.showList__2
                        (case x of ww { GHC.Types.D# ww1 ->
                         GHC.Float.$w$sshowSignedFloat
                           GHC.Float.$fShowDouble_$sshowFloat
                           GHC.Float.minExpt
                           ww1
                           (Main.main_showl xs) }) }) -}
28e793f7cde6c17f4330277661eed68d
  main13 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main7
                   Main.main14) -}
326449ef6e41bb43ebe44be5ef3f81f4
  main14 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main8
                   Main.main15) -}
cecd56aaea62d39aeb99c26b09f08203
  main15 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main9
                   Main.main16) -}
ef9b0586e9ce72cbdca8d6026e726995
  main16 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main10
                   (GHC.Types.[] @ GHC.Types.Double)) -}
c55a42eaa3adb21aa715127b13324a3d
  main17 :: GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: GHC.Types.Double) ->
                 case ds of wild { GHC.Types.D# x ->
                 GHC.Types.D# (GHC.Prim.*## x 5.0##) }) -}
9bba34306f8ed0921620b7f4a4ed5e4f
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe1
                   Main.main19) -}
b2c6311f29e848367f58e63e0174254e
  main19 :: [GHC.Types.Char]
  {- Unfolding: (case Main.$wgo1
                        Main.main3
                        Main.main13 of ww { DEFAULT ->
                 GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble_$sshowFloat
                   GHC.Show.appPrec1
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
bb2c9a3fba7f6329e4d90e9ce1e60ae3
  main2 :: GHC.Base.String
  {- Unfolding: (case Main.$wgo
                        Main.main3
                        Main.main3 of ww { DEFAULT ->
                 GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble_$sshowFloat
                   GHC.Show.shows22
                   (GHC.Prim.sqrtDouble# ww)
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
23ac1b62ff4bec40c15e054186d6e792
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe1
                   Main.main21) -}
2bd209a7d0ef61e7f6226aec5c47f46b
  main21 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.List.zipWith
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        GHC.Float.minusDouble
                        Main.main3
                        Main.main13 of wild {
                   []
                   -> GHC.CString.unpackAppendCString#
                        "[]"#
                        (GHC.Types.[] @ GHC.Types.Char)
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.showList__2
                        (case x of ww { GHC.Types.D# ww1 ->
                         GHC.Float.$w$sshowSignedFloat
                           GHC.Float.$fShowDouble_$sshowFloat
                           GHC.Float.minExpt
                           ww1
                           (Main.main_showl1 xs) }) }) -}
50e581095e467f798bae16280c87bce4
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe1
                   Main.main23) -}
3fdda5e21e57fd96951251dbf8bd4a4c
  main23 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.List.zipWith
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        GHC.Float.plusDouble
                        Main.main3
                        Main.main13 of wild {
                   []
                   -> GHC.CString.unpackAppendCString#
                        "[]"#
                        (GHC.Types.[] @ GHC.Types.Char)
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.showList__2
                        (case x of ww { GHC.Types.D# ww1 ->
                         GHC.Float.$w$sshowSignedFloat
                           GHC.Float.$fShowDouble_$sshowFloat
                           GHC.Float.minExpt
                           ww1
                           (Main.main_showl2 xs) }) }) -}
7a246f15e700e9e00a6f72444da5e964
  main24 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
c94644610e8d820b2cd7c9c169f7c7b6
  main3 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main10
                   Main.main4) -}
5b8c37fa0f95d1a0d230cd16282742a7
  main4 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main9
                   Main.main5) -}
7bc41d3d1e88f5e6ab1ea4b82ca0b527
  main5 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main8
                   Main.main6) -}
fcbd4c690b83e32ec23839fac9f66bc0
  main6 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main7
                   (GHC.Types.[] @ GHC.Types.Double)) -}
0609ba6f88cb979943a85d666e9d8087
  main7 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 4.0##) -}
5c4125459117fafcc90e9229e6d76d97
  main8 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 3.0##) -}
7d9559a6e10790f5534f4f8e8cc5fd7e
  main9 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 2.0##) -}
d97748926b4f2c9dbfeb0e14059e56e7
  main_showl :: [GHC.Types.Double] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
aec83774f191eefdd56dbe1f03378fa3
  main_showl1 :: [GHC.Types.Double] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
60c7e3f6d5178ad7beb61ee0e3f332ca
  main_showl2 :: [GHC.Types.Double] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

